{"version":3,"sources":["app.js"],"names":["$","mirai","common","init","fadeIn","window","width","click","e","preventDefault","this","toggleClass","siblings","slideToggle","document","on","event","animate","scrollTop","attr","offset","top","resize","removeClass","find","finalize","UTIL","fire","func","funcname","args","namespace","undefined","loadEvents","each","body","className","replace","split","i","classnm","ready","jQuery"],"mappings":"AAAA,cAWA,SAAAA,GAEA,GAAAC,IACAC,QAAAC,KAAA,WAAAH,EAAA,QAAAI,OAAA,KAAAJ,EAAAK,QAAAC,QAAA,KAAAN,EAAA,kBAAAO,MAAA,SAAAC,GAAAA,EAAAC,iBAAAT,EAAAU,MAAAC,YAAA,UAAAX,EAAAU,MAAAE,SAAA,OAAAC,gBAeAb,EAAA,iBAAAO,MAAA,WAAAP,EAAA,2CAAAW,YAAA,wBACAX,EAAAc,UAAAC,GAAA,QAAA,eAAA,SAAAC,GAAAA,EAAAP,iBAAAT,EAAA,cAAAiB,SAAAC,UAAAlB,EAAAA,EAAAmB,KAAAT,KAAA,SAAAU,SAAAC,KAAA,OACArB,EAAAK,QAAAiB,OAAA,WAAA,GAAAhB,GAAAN,EAAAc,UAAAR,OAAAA,GAAA,KAAAN,EAAA,2CAAAuB,YAAA,wBAAAvB,EAAA,mBAAAO,MAAA,WAAAP,EAAAU,MAAAc,KAAA,QAAAb,YAAA,sBAAAX,EAAA,qBAAAW,YAAA,yBAAAc,SAAA,eAGAC,GAAAC,KAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,GAAAH,GAAAI,EAAA9B,CAAA4B,GAAAG,SAAAH,EAAA,OAAAA,EAAAF,EAAA,KAAAC,EAAAD,EAAAA,GAAAI,EAAAH,GAAAD,EAAAA,GAAA,kBAAAI,GAAAH,GAAAC,GAAAF,GAAAI,EAAAH,GAAAC,GAAAC,IAAAG,WAAA,WACAP,EAAAC,KAAA,UACA3B,EAAAkC,KAAApB,SAAAqB,KAAAC,UAAAC,QAAA,KAAA,KAAAC,MAAA,OAAA,SAAAC,EAAAC,GAAAd,EAAAC,KAAAa,GAAAd,EAAAC,KAAAa,EAAA,cACAd,EAAAC,KAAA,SAAA,aACA3B,GAAAc,UAAA2B,MAAAf,EAAAO,aAAAS","file":"mirai.min.js","sourcesContent":["'use strict';// Put your JS here\n/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */(function($){// Use this variable to set up the common and page specific functions. If you\n// rename this variable, you will also need to rename the namespace below.\nvar mirai={// All pages\n'common':{init:function init(){$('body').fadeIn(1000);if($(window).width()<800){$('.footer-nav h3').click(function(e){e.preventDefault();$(this).toggleClass('active');$(this).siblings('nav').slideToggle();});}// Sticky Header\n// var rafTimer;\n// window.onscroll = function (event) {\n//   cancelAnimationFrame(rafTimer);\n//   rafTimer = requestAnimationFrame(toggleHeaderFloating);\n// };\n// function toggleHeaderFloating() {\n//   // does cause layout/reflow: https://git.io/vQCMn\n//   if (window.scrollY > 80) {\n//     document.body.classList.add('sticky');\n//   } else {\n//     document.body.classList.remove('sticky');\n//   }\n// }\n// Hide nav on link click \n$('.nav-mobile a').click(function(){$('body, .nav-mobile, .mobile-trigger span').toggleClass('mobile-menu-active');});// Smooth Scroll to links\n$(document).on('click','a[href^=\"#\"]',function(event){event.preventDefault();$('html, body').animate({scrollTop:$($.attr(this,'href')).offset().top},500);});// Reset nav on window resize\n$(window).resize(function(){var width=$(document).width();if(width<900){$('body, .nav-mobile, .mobile-trigger span').removeClass('mobile-menu-active');}});$('.mobile-trigger').click(function(){$(this).find('span').toggleClass('mobile-menu-active');$('body, .nav-mobile').toggleClass('mobile-menu-active');});},finalize:function finalize(){// JavaScript to be fired on all pages, after page specific JS is fired\n}}};// The routing fires all common scripts, followed by the page specific scripts.\n// Add additional events for more control over timing e.g. a finalize event\nvar UTIL={fire:function fire(func,funcname,args){var fire;var namespace=mirai;funcname=funcname===undefined?'init':funcname;fire=func!=='';fire=fire&&namespace[func];fire=fire&&typeof namespace[func][funcname]==='function';if(fire){namespace[func][funcname](args);}},loadEvents:function loadEvents(){// Fire common init JS\nUTIL.fire('common');// Fire page-specific init JS, and then finalize JS\n$.each(document.body.className.replace(/-/g,'_').split(/\\s+/),function(i,classnm){UTIL.fire(classnm);UTIL.fire(classnm,'finalize');});// Fire common finalize JS\nUTIL.fire('common','finalize');}};// Load Events\n$(document).ready(UTIL.loadEvents);})(jQuery);// Fully reference jQuery after this point."]}